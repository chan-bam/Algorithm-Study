import sys
sys.stdin = open("11673in.txt")

def reflect():
    cnt = 0
    dir = 0 # 우방향으로 시작

    nr = nc = 0 # 0,0좌표에서 시작
    # 범위체크
    while 0 <= nr < N and 0 <= nc < N: # 범위 내에 있으면 계속 반복
        if BRD[nr][nc] == 1: # 1번 거울을 만나면
            cnt += 1
            # 거울  1 : 방향1 (우->상 +1) (상->우 -1) (좌->하 +1) (하->좌 -1)
            if dir == 0:    # 우
                dir += 1   # 상
            elif dir == 1:  # 상
                dir -= 1   # 우
            elif dir == 2:  # 좌
                dir += 1   # 하
            elif dir == 3:  # 하
                dir -= 1   # 좌
            
        elif BRD[nr][nc] == 2: # 1번 거울을 만나면 방향이면 # 온 방향에 따라 dir 다르다
            # 거울  2 : 방향2 (우->하 +3) (상->좌 +1) (좌->상 -1)  (하->우 -3)    # 방향지정 조건
            cnt += 1
            if dir == 0:  # 우
                dir += 3 # 하
            elif dir == 1: # 상
                dir += 1 # 좌
            elif dir == 2: # 좌
                dir -= 1 # 상
            elif dir == 3: # 하
                dir -= 3 # 우
        #### 이 코드가 뒤에  조건문 뒤에 나와야 런타임 에러 안나는 이유 ####
        # 앞에 나오면 런타임 에러 나는 이유 : TC의 첫번째 칸이 거울이더라도 무조건 한칸 앞으로 가버림... #
        # 거울의 종류에 따라 거울 개수 잘못 셀 수도 있고.. 방향때문에 격자판 안에서 무한루프 돌 수도.... #
        nr += dr[dir]  # 한칸 가라 # 앞으로 진행
        nc += dc[dir]
        #############################################################
    # 범위 벗어나면-->반복문 종료하고 cnt 리턴
    return cnt


# 4방향 델타
dr = [0, -1, 0, 1] # 행  # 우 상 좌 하
dc = [1, 0, -1, 0] # 열  # 시작은 우...?

T = int(input())

for tc in range(1, T+1):
    # 격자판 사이즈
    N = int(input())
    # 시작좌표 [0,0]에서 우 ---> 로 진입
    # 거울  1 : 방향1 (우->하 +3) (하->우 -3) (좌->상 -1) (상->좌 +1)   # 방향지정 조건
    # 거울  2 : 방향2 (우->상 +1) (상->우 -1) (하->좌 -1) (좌->하 +1)   # 방향 지정 조건
    # 0은 빈공간 # 1은 방향1 #2는 방향2
    BRD = [list(map(int, input().split())) for _ in range(N)] # str로 그냥 받아도 되지만...
    result = reflect()

    print(f'#{tc} {result}')